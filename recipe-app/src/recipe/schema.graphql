scalar JSON
scalar Date

type Query {
  latestRecipes: [Recipe!]!
  recipeById(recipeId: ID!): Recipe!
  login(email: String!, password: String!): User!
  logout: User!
  me: User!
  findUserById(id: String!): User
  findUserByEmail(email: String!): User
}

type Mutation {
  createUser(input: UserInput!): User!
  resetPassword(input: UserInput!): User!
  createRecipe(content: RecipeInput!): Recipe!
  updateRecipe(id: ID!, content: RecipeInput!): Recipe!
  deleteRecipe(id: ID!): Recipe!
}

type IngredientNum {
  ingredientId: String!
  recipeId: String!
  name: String!
  unit: String!
  value: String!
}

type Recipe {
  id: ID!
  authorId: String!
  title: String!
  ingredients: [IngredientNum!]!
  instructions: [String!]!
  updatedAt: Date
  # likeNum: Int
  # viewers
}

type User {
  id: ID!
  email: String!
  name: String
  # basket  Basket?
  # history: [Recipe!]!
  # likes   Like[]
}

input IngredientNumInput {
  ingredientId: String
  recipeId: String
  name: String!
  unit: String!
  value: String!
}

input RecipeInput {
  title: String!
  ingredients: [IngredientNumInput!]!
  instructions: [String!]!
}

type UserInput {
  email: String!
  name: String
  password: String!
  # history: [Recipe!]!
}
