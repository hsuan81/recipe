// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String   @id @default(cuid())
  email   String   @unique
  name    String?
  basket  Basket?
  // history Recipe[]
  likes   Like[]
  recipes Recipe[]
}

model Basket {
  id         String       @id @default(cuid())
  userId     String       @unique
  recipeList Recipe[]
  foodToBuy  Ingredient[]
  // itemToBuy Item[]
  user       User         @relation(fields: [userId], references: [id])
}

model Recipe {
  id           String                  @id @default(cuid())
  authorId     String
  title        String
  instructions String[]
  createdAt    DateTime                @default(now())
  updatedAt    DateTime                @updatedAt
  ingredients  NumIngredientOnRecipe[]
  // itemList Item[]
  likesNum     Int                     @default(0)
  author       User                    @relation(fields: [authorId], references: [id])
  viewrs       Int                     @default(0)
  basket       Basket[]
}

model Ingredient {
  id      String                  @id @default(cuid())
  name    String
  recipes NumIngredientOnRecipe[]
  basket  Basket[]
}

model NumIngredientOnRecipe {
  ingredientId String
  recipeId     String
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  recipe       Recipe     @relation(fields: [recipeId], references: [id])
  unit         String
  value        String

  @@id([recipeId, ingredientId])
}

model Like {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

// model Item {
//   id        Int      @default(autoincrement()) @id
//   fromRecipeId Int
//   name String
//   unit String
//   value Int
//   fromRecipe Recipe @relation(fields: [fromRecipeId], references: [id])
// }
